{"model_name_or_path": "ase_0", "instance_id": "django__django-10914", "model_patch": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..6016ea79f6 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,12 +304,14 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+# Defaults to 0o644 (readable by owner, group, and others; writable by owner only).\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\n # see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_DIRECTORY_PERMISSIONS = None\n+# Defaults to 0o755 (readable and executable by all; writable by owner only).\n+FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755\n \n # Python module path where user will place custom format definition.\n # The directory where this setting is pointing should contain subdirectories\n"}
{"model_name_or_path": "ase_1", "instance_id": "django__django-10914", "model_patch": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..7cd43d5796 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,12 +304,16 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+# Setting this to a specific value (rather than None) ensures consistent permissions\n+# regardless of whether files are stored temporarily in memory or on disk during upload.\n+# 0o644 allows owner read/write, group/others read-only access.\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\n # see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_DIRECTORY_PERMISSIONS = None\n+# 0o755 allows owner read/write/execute, group/others read/execute access.\n+FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755\n \n # Python module path where user will place custom format definition.\n # The directory where this setting is pointing should contain subdirectories\n"}
{"model_name_or_path": "ase_2", "instance_id": "django__django-10914", "model_patch": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..af2b6643af 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,12 +304,12 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\n # see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_DIRECTORY_PERMISSIONS = None\n+FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755\n \n # Python module path where user will place custom format definition.\n # The directory where this setting is pointing should contain subdirectories\n"}
{"model_name_or_path": "ase_3", "instance_id": "django__django-10914", "model_patch": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..9c74230572 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,9 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+# Setting this to a specific value ensures consistent permissions regardless of whether\n+# files are temporarily stored in memory or on disk during upload processing.\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\n"}
{"model_name_or_path": "ase_4", "instance_id": "django__django-10914", "model_patch": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..bdeec80610 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,7 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\n"}
{"model_name_or_path": "ase_5", "instance_id": "django__django-10914", "model_patch": "diff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..f8ac2ce556 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -214,7 +214,12 @@ class FileSystemStorage(Storage):\n \n     @cached_property\n     def file_permissions_mode(self):\n-        return self._value_or_setting(self._file_permissions_mode, settings.FILE_UPLOAD_PERMISSIONS)\n+        mode = self._value_or_setting(self._file_permissions_mode, settings.FILE_UPLOAD_PERMISSIONS)\n+        # Default to 0o644 on POSIX systems when no explicit permission is set\n+        # This ensures consistent permissions for both small and large file uploads\n+        if mode is None and os.name != 'nt':\n+            return 0o644\n+        return mode\n \n     @cached_property\n     def directory_permissions_mode(self):\n"}
